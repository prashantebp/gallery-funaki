
    {%- style -%}
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
      padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
    }
  
    @media screen and (min-width: 750px) {
      .section-{{ section.id }}-padding {
        padding-top: {{ section.settings.padding_top }}px;
        padding-bottom: {{ section.settings.padding_bottom }}px;
      }
    }
  {%- endstyle -%}
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/fancybox/3.5.7/jquery.fancybox.min.css"> 
    <section class="section section-lg fun-gallery__section section-{{ section.id }}-padding">
      {% if section.blocks.size > 0 %}
    <div class="container-xxl">
        <div class="row">
            <div class="gallery" id="gallery">
                {% for block in section.blocks %}
                    <div class="gallery-item">
                        <div class="content">
                            {% if block.settings.col_image %}
                            <a href="{{ block.settings.col_image }}" data-fancybox="gallery" >
                                    <img  src="{{ block.settings.col_image | img_url: "grande" }}" loading="lazy" >
                                  </a>
                            {% endif %}
                        </div>
                    </div>
                {%- endfor -%}
            </div>
        </div>
    </div>
        
    {% endif %}
   
    {% if section.blocks.size == 0 %}
       <div> No Section items</div>
    {% endif %}
    </section>
    
   <script>
    var gallery = document.querySelector('#gallery');
    var getVal = function (elem, style) { return parseInt(window.getComputedStyle(elem).getPropertyValue(style)); };
    var getHeight = function (item) { return item.querySelector('.content').getBoundingClientRect().height; };
    var resizeAll = function () {
        var altura = getVal(gallery, 'grid-auto-rows');
        var gap = getVal(gallery, 'grid-row-gap');
        gallery.querySelectorAll('.gallery-item').forEach(function (item) {
            var el = item;
            el.style.gridRowEnd = "span " + Math.ceil((getHeight(item) + gap) / (altura + gap));
        });
    };
    gallery.querySelectorAll('img').forEach(function (item) {
            item.addEventListener('load', function () {
                var altura = getVal(gallery, 'grid-auto-rows');
                var gap = getVal(gallery, 'grid-row-gap');
                var gitem = item.parentElement.parentElement;
                gitem.style.gridRowEnd = "span " + Math.ceil((getHeight(gitem) + gap) / (altura + gap));
            });
    });

    var doit;
    window.onresize = function(){
      clearTimeout(doit);
      doit = setTimeout(resizeAll, 300);
    };
    {% comment %} window.addEventListener('resize', resizeAll); {% endcomment %}
    // gallery.querySelectorAll('.gallery-item').forEach(function (item) {
    //     item.addEventListener('click', function () {        
    //         item.classList.toggle('full');        
    //     });
    // });
    jQuery('[data-fancybox="gallery"]').fancybox({
      buttons: [
        "slideShow",
        "fullScreen",
        "close"
      ],
      loop: false,
      protect: true
    });
   </script>
   <script src="https://cdnjs.cloudflare.com/ajax/libs/fancybox/3.5.7/jquery.fancybox.min.js"></script>

   
   {% schema %}
   {
     "name": "fun image gallery",
     "class": "index-section",
     "max_blocks": 8,
     "settings": [
       {
        "type": "header",
        "content": "Section Padding"
      },
      {
        "type": "range",
        "id": "padding_top",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "t:sections.all.padding.padding_top",
        "default": 36
      },
      {
        "type": "range",
        "id": "padding_bottom",
        "min": 0,
        "max": 120,
        "step": 2,
        "unit": "px",
        "label": "t:sections.all.padding.padding_bottom",
        "default": 36
      }
     ],
     "blocks": [
       {
         "type": "image",
         "name": "Block",
         "settings": [
           {
             "type": "image_picker",
             "id": "col_image",
             "label": "Image"
           }
         ]
       }
     ],
     "presets": [
       {
         "name": "fun image gallery",
         "category": "Text",
         "blocks": [
           {
             "type": "image"
           },
           {
             "type": "image"
           },
           {
             "type": "image"
           },
           {
             "type": "image"
           }
         ]
       }
     ]
   }
   {% endschema %}
   